{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "82549986-0688-48da-94ff-55820cbcf2bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "95c09af0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "86ba50d6-f684-46a2-abab-e07bfa897c1f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Text</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Supply Quality China's EXCLUSIVE dimensions at...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>over. SidLet me know. Thx.</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dear Friend,Greetings to you.I wish to accost ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>MR. CHEUNG PUIHANG SENG BANK LTD.DES VOEUX RD....</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Not a surprising assessment from Embassy.</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                Text  Class\n",
       "0  Supply Quality China's EXCLUSIVE dimensions at...      1\n",
       "1                         over. SidLet me know. Thx.      0\n",
       "2  Dear Friend,Greetings to you.I wish to accost ...      1\n",
       "3  MR. CHEUNG PUIHANG SENG BANK LTD.DES VOEUX RD....      1\n",
       "4          Not a surprising assessment from Embassy.      0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(r\"C:\\Users\\Admin\\Downloads\\fraud_email_.csv.zip\")\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f7cdda3-744f-4c58-86ff-3ce30055e2dd",
   "metadata": {},
   "source": [
    "# EDA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bedf772-4106-45b2-8668-e201f1561acc",
   "metadata": {},
   "source": [
    "### Fraud (1) or Not Fraud (0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "29de6e00-ec98-45d1-8127-51f35aac1307",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method DataFrame.info of                                                     Text  Class\n",
       "0      Supply Quality China's EXCLUSIVE dimensions at...      1\n",
       "1                             over. SidLet me know. Thx.      0\n",
       "2      Dear Friend,Greetings to you.I wish to accost ...      1\n",
       "3      MR. CHEUNG PUIHANG SENG BANK LTD.DES VOEUX RD....      1\n",
       "4              Not a surprising assessment from Embassy.      0\n",
       "...                                                  ...    ...\n",
       "11924  Travel well. I'll look forward to hearing your...      0\n",
       "11925  Dear friend, I wish to begin by way of introdu...      1\n",
       "11926  Follow Up Flag: Follow upFlag Status: FlaggedM...      0\n",
       "11927  sbwhoeop B6Saturday January 23 2010 4:09 PMRe:...      0\n",
       "11928  FYI. We are revising call sheet for call to Ka...      0\n",
       "\n",
       "[11929 rows x 2 columns]>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ed564f63-3446-4119-88cf-e3ecbe0f5dbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.describe of                                                     Text  Class\n",
       "0      Supply Quality China's EXCLUSIVE dimensions at...      1\n",
       "1                             over. SidLet me know. Thx.      0\n",
       "2      Dear Friend,Greetings to you.I wish to accost ...      1\n",
       "3      MR. CHEUNG PUIHANG SENG BANK LTD.DES VOEUX RD....      1\n",
       "4              Not a surprising assessment from Embassy.      0\n",
       "...                                                  ...    ...\n",
       "11924  Travel well. I'll look forward to hearing your...      0\n",
       "11925  Dear friend, I wish to begin by way of introdu...      1\n",
       "11926  Follow Up Flag: Follow upFlag Status: FlaggedM...      0\n",
       "11927  sbwhoeop B6Saturday January 23 2010 4:09 PMRe:...      0\n",
       "11928  FYI. We are revising call sheet for call to Ka...      0\n",
       "\n",
       "[11929 rows x 2 columns]>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "33da0d28-880f-45d8-b96f-d0792d93ae6f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Text', 'Class'], dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(df.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9f13407e-a94c-4f07-ac05-8c9d0366805f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Class Distribution'}, xlabel='Class'>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Class'].value_counts().plot(kind='bar', title='Class Distribution')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "da35f983-1530-43ac-b0fe-17bd3ace28b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: title={'center': 'Email Length Distribution'}, ylabel='Frequency'>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Text'].str.len().plot(kind='hist', bins=50, title='Email Length Distribution')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "882a0b3d-fcb9-4179-bb7d-d0eb52e4f9ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from collections import Counter\n",
    "import re\n",
    "\n",
    "# Combine all email text into one string\n",
    "all_text = \" \".join(df['Text'].astype(str))\n",
    "\n",
    "# Basic cleaning: remove punctuation and make lowercase\n",
    "cleaned_text = re.sub(r\"[^\\w\\s]\", \"\", all_text.lower())\n",
    "\n",
    "# Split into words\n",
    "words = cleaned_text.split()\n",
    "\n",
    "# Count word frequencies\n",
    "word_freq = Counter(words)\n",
    "\n",
    "# Get top 20 most common words\n",
    "common_words = word_freq.most_common(20)\n",
    "\n",
    "# Plot them\n",
    "words, counts = zip(*common_words)\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.bar(words, counts, color='skyblue')\n",
    "plt.xticks(rotation=45)\n",
    "plt.title(\"Top 20 Most Common Words in Emails\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8dc4a9fe-31f4-48b4-8eb0-5c1b6cbdcbb8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('2e 2e', 7531), ('nbsp nbsp', 3875), ('div div', 3780), ('br br', 2223), ('united states', 1618), ('security company', 1460), ('bank account', 1436), ('8218 402', 1189), ('south africa', 1187), ('000 00', 1147)]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "\n",
    "vectorizer = CountVectorizer(ngram_range=(2, 2), stop_words='english')\n",
    "X2 = vectorizer.fit_transform(df['Text'].astype(str))\n",
    "sum_words = X2.sum(axis=0)\n",
    "\n",
    "words_freq = [(word, sum_words[0, idx]) for word, idx in vectorizer.vocabulary_.items()]\n",
    "words_freq = sorted(words_freq, key=lambda x: x[1], reverse=True)\n",
    "\n",
    "print(words_freq[:10])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8116fd52-0a2d-4ef7-b0fb-f075c5fd794c",
   "metadata": {},
   "source": [
    "### Tokenization + Stopword Removal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1d546423-e604-4690-98f1-cf005a8120b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import re\n",
    "\n",
    "def clean_email(text):\n",
    "    text = str(text)\n",
    "    text = re.sub(r'<.*?>', '', text)  # Remove HTML tags\n",
    "    text = re.sub(r'http\\S+|www\\S+', '', text)  # Remove links\n",
    "    text = re.sub(r'\\S+@\\S+', '', text)  # Remove email addresses\n",
    "    text = re.sub(r'[^a-zA-Z\\s]', '', text)  # Keep only letters\n",
    "    text = text.lower()  # Convert text to lowercase\n",
    "    return text\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e2265255-9403-4ca1-ad86-5b39ec81fb38",
   "metadata": {},
   "outputs": [],
   "source": [
    "import spacy\n",
    "from spacy.lang.en.stop_words import STOP_WORDS\n",
    "\n",
    "nlp = spacy.load(\"en_core_web_sm\")\n",
    "\n",
    "def preprocess_text(text):\n",
    "    doc = nlp(text)\n",
    "    tokens = []\n",
    "    for token in doc:\n",
    "        if token.text in STOP_WORDS or token.is_punct or token.is_space:\n",
    "            continue\n",
    "        tokens.append(token.lemma_)  # Use lemma (root word)\n",
    "    return \" \".join(tokens)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "72e2476a-8a80-46a2-bf5a-0148a62f37ab",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (3697866367.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[48], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    Step 4: Feature Extraction (TF-IDF)\u001b[0m\n\u001b[1;37m         ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "Step 4: Feature Extraction (TF-IDF)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d1b30e5f-b6b1-4b31-a390-1099e4547563",
   "metadata": {},
   "outputs": [],
   "source": [
    "prepro"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "5b9cb083-8d2e-434e-88b7-8839f05a0923",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Replace NaN values in the 'Text' column with empty string\n",
    "df['Text'] = df['Text'].fillna('')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e3233c2c-3dc9-4986-9651-bb699ab171c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop rows with NaN or missing values in the 'Text' column\n",
    "df = df.dropna(subset=['Text'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "bc21b890-c6bb-407a-9714-05a94088781e",
   "metadata": {},
   "outputs": [],
   "source": [
    "def preprocess_text(text):\n",
    "    # Ensure that the text is a string before processing\n",
    "    if isinstance(text, str):\n",
    "        doc = nlp(text)\n",
    "        tokens = [token.text for token in doc if not token.is_stop and not token.is_punct]\n",
    "        return \" \".join(tokens)\n",
    "    else:\n",
    "        return \"\"  # Return an empty string if the input is not a string\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "39e96681-50b4-47a2-b04d-afa2f30c8c41",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 1: Replace NaN values in the 'Text' column with an empty string\n",
    "df['Text'] = df['Text'].fillna('')\n",
    "\n",
    "# Step 2: Remove rows that still have non-string entries just in case\n",
    "df = df[df['Text'].apply(lambda x: isinstance(x, str))]\n",
    "\n",
    "# Step 3: Define your cleaning function (example placeholder)\n",
    "def clean_email(text):\n",
    "    # Add your own cleaning steps here (remove links, punctuation, etc.)\n",
    "    return text.lower()\n",
    "\n",
    "# Step 4: Define safe NLP preprocessing\n",
    "def preprocess_text(text):\n",
    "    if isinstance(text, str):\n",
    "        doc = nlp(text)\n",
    "        tokens = [token.text for token in doc if not token.is_stop and not token.is_punct]\n",
    "        return \" \".join(tokens)\n",
    "    else:\n",
    "        return \"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "50fac600-b1ef-48b4-8d73-1c7ba0747b68",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                Text  \\\n",
      "0  Supply Quality China's EXCLUSIVE dimensions at...   \n",
      "1                         over. SidLet me know. Thx.   \n",
      "2  Dear Friend,Greetings to you.I wish to accost ...   \n",
      "3  MR. CHEUNG PUIHANG SENG BANK LTD.DES VOEUX RD....   \n",
      "4          Not a surprising assessment from Embassy.   \n",
      "\n",
      "                                        cleaned_text  \n",
      "0  supply quality china exclusive dimensions unbe...  \n",
      "1                                    sidlet know thx  \n",
      "2  dear friend greetings you.i wish accost reques...  \n",
      "3  mr cheung puihang seng bank ltd.des voeux rd b...  \n",
      "4                      surprising assessment embassy  \n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Step 5: Apply cleaning and preprocessing\n",
    "df['cleaned_text'] = df['Text'].apply(clean_email)\n",
    "df['cleaned_text'] = df['cleaned_text'].apply(preprocess_text)\n",
    "\n",
    "# Optional: Preview results\n",
    "print(df[['Text', 'cleaned_text']].head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "4cf57529-dcfe-4581-8083-445c0e4049f1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Save the cleaned DataFrame to a CSV\n",
    "df.to_csv('data/cleaned_data.csv', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7e2bd6ba-5edc-49ab-8f7b-4ac015c287d1",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d241dc17-a040-4444-a933-e104adbc9b3a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(11929, 3000)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "\n",
    "# Initialize the vectorizer\n",
    "vectorizer = TfidfVectorizer(max_features=3000)\n",
    "\n",
    "# Apply vectorization to the cleaned email text\n",
    "X = vectorizer.fit_transform(df['cleaned_text'])\n",
    "\n",
    "print(X.shape)  # (number of samples, number of features)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "0c2eab69-59ef-4938-9b3b-183d328e5007",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Split data into train and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, df['Class'], test_size=0.2, random_state=42)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c43e5d74-7740-4caf-8f4f-911c8a8ddcf6",
   "metadata": {},
   "source": [
    " # LRM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "8b84e359-bf85-4dcb-964d-8a2be9b2f01f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      1334\n",
      "           1       1.00      0.97      0.98      1052\n",
      "\n",
      "    accuracy                           0.99      2386\n",
      "   macro avg       0.99      0.98      0.99      2386\n",
      "weighted avg       0.99      0.99      0.99      2386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import classification_report, confusion_matrix\n",
    "\n",
    "# Initialize the model\n",
    "model = LogisticRegression()\n",
    "\n",
    "# Train the model\n",
    "model.fit(X_train, y_train)\n",
    "\n",
    "# Predict on the test set\n",
    "y_pred = model.predict(X_test)\n",
    "\n",
    "# Evaluate performance\n",
    "print(classification_report(y_test, y_pred))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "55607a15-ebc1-4af4-88fa-59f1d3cd9238",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "# Confusion matrix heatmap\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Not Fraud', 'Fraud'], yticklabels=['Not Fraud', 'Fraud'])\n",
    "plt.ylabel('Actual')\n",
    "plt.xlabel('Predicted')\n",
    "plt.title('Confusion Matrix')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "145022de-cb4e-45c3-8107-0f5cd22d7840",
   "metadata": {},
   "source": [
    " ## NB"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2ed16afc-4612-4f0c-8006-215d41832e00",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.naive_bayes import MultinomialNB\n",
    "from sklearn.svm import LinearSVC\n",
    "from xgboost import XGBClassifier\n",
    "from sklearn.metrics import classification_report, confusion_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "0c903a25-2d6f-4b77-85b0-c7d589f38b09",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Naive Bayes Performance:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      0.99      0.99      1334\n",
      "           1       0.98      0.98      0.98      1052\n",
      "\n",
      "    accuracy                           0.98      2386\n",
      "   macro avg       0.98      0.98      0.98      2386\n",
      "weighted avg       0.98      0.98      0.98      2386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Train Naive Bayes\n",
    "nb_model = MultinomialNB()\n",
    "nb_model.fit(X_train, y_train)\n",
    "y_pred_nb = nb_model.predict(X_test)\n",
    "\n",
    "# Evaluate\n",
    "print(\"Naive Bayes Performance:\")\n",
    "print(classification_report(y_test, y_pred_nb))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8da87f0-553a-4e55-9709-56bbd6c5949c",
   "metadata": {},
   "source": [
    "## SVM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "17bb774f-a964-4ad4-a467-08c081cb8603",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SVM Performance:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      1.00      0.99      1334\n",
      "           1       1.00      0.98      0.99      1052\n",
      "\n",
      "    accuracy                           0.99      2386\n",
      "   macro avg       0.99      0.99      0.99      2386\n",
      "weighted avg       0.99      0.99      0.99      2386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Train SVM\n",
    "svm_model = LinearSVC()\n",
    "svm_model.fit(X_train, y_train)\n",
    "y_pred_svm = svm_model.predict(X_test)\n",
    "\n",
    "# Evaluate\n",
    "print(\"SVM Performance:\")\n",
    "print(classification_report(y_test, y_pred_svm))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d57609d3-7bbe-4802-80e1-2ff19b7d40f3",
   "metadata": {},
   "source": [
    "# XG"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "1b60fd98-db12-440d-ad74-36f9fc6b406a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "XGBoost Performance:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.98      1.00      0.99      1334\n",
      "           1       1.00      0.97      0.99      1052\n",
      "\n",
      "    accuracy                           0.99      2386\n",
      "   macro avg       0.99      0.99      0.99      2386\n",
      "weighted avg       0.99      0.99      0.99      2386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Convert sparse matrix to dense for XGBoost\n",
    "X_train_dense = X_train.toarray()\n",
    "X_test_dense = X_test.toarray()\n",
    "\n",
    "# Train XGBoost\n",
    "from xgboost import XGBClassifier\n",
    "\n",
    "# No need for use_label_encoder anymore\n",
    "xgb_model = XGBClassifier(eval_metric='logloss')\n",
    "xgb_model.fit(X_train_dense, y_train)\n",
    "y_pred_xgb = xgb_model.predict(X_test_dense)\n",
    "\n",
    "# Evaluate\n",
    "print(\"XGBoost Performance:\")\n",
    "print(classification_report(y_test, y_pred_xgb))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "27a2ec43-c443-42c2-b309-d9b83a1a0d34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "def plot_conf_matrix(y_true, y_pred, title):\n",
    "    cm = confusion_matrix(y_true, y_pred)\n",
    "    sns.heatmap(cm, annot=True, fmt='d', cmap='Purples', \n",
    "                xticklabels=['Not Fraud', 'Fraud'], yticklabels=['Not Fraud', 'Fraud'])\n",
    "    plt.title(title)\n",
    "    plt.xlabel('Predicted')\n",
    "    plt.ylabel('Actual')\n",
    "    plt.show()\n",
    "\n",
    "# Confusion matrices\n",
    "plot_conf_matrix(y_test, y_pred_nb, \"Naive Bayes Confusion Matrix\")\n",
    "plot_conf_matrix(y_test, y_pred_svm, \"SVM Confusion Matrix\")\n",
    "plot_conf_matrix(y_test, y_pred_xgb, \"XGBoost Confusion Matrix\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59af5405-b0b8-44cb-9527-ba02074b24e9",
   "metadata": {},
   "source": [
    "# hybrid"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "3c886946-5fc6-44be-880b-cf148034e27f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.svm import LinearSVC\n",
    "from sklearn.ensemble import VotingClassifier\n",
    "from sklearn.metrics import classification_report\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "db616653-e102-435d-9e3d-057217533322",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Voting Classifier Performance (LogReg + SVM):\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      1334\n",
      "           1       1.00      0.97      0.98      1052\n",
      "\n",
      "    accuracy                           0.99      2386\n",
      "   macro avg       0.99      0.98      0.99      2386\n",
      "weighted avg       0.99      0.99      0.99      2386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Define models\n",
    "log_model = LogisticRegression()\n",
    "svm_model = LinearSVC()\n",
    "\n",
    "# Combine them\n",
    "voting_clf = VotingClassifier(\n",
    "    estimators=[('log_reg', log_model), ('svm', svm_model)],\n",
    "    voting='hard'  # or 'soft' if using SVC with probabilities\n",
    ")\n",
    "\n",
    "# Train on data\n",
    "voting_clf.fit(X_train, y_train)\n",
    "\n",
    "# Predict\n",
    "y_pred = voting_clf.predict(X_test)\n",
    "\n",
    "# Evaluate\n",
    "print(\"Voting Classifier Performance (LogReg + SVM):\")\n",
    "print(classification_report(y_test, y_pred))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "df73d8c1-05f8-45e5-a529-0c475ee1e77c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Voting Classifier Performance (LogReg + SVM):\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.97      1.00      0.99      1334\n",
      "           1       1.00      0.97      0.98      1052\n",
      "\n",
      "    accuracy                           0.99      2386\n",
      "   macro avg       0.99      0.98      0.99      2386\n",
      "weighted avg       0.99      0.99      0.99      2386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "\n",
    "from sklearn.svm import SVC\n",
    "svm_model = SVC(probability=True)\n",
    "\n",
    "\n",
    "# Combine them\n",
    "voting_clf = VotingClassifier(\n",
    "    estimators=[('log_reg', log_model), ('svm', svm_model)],\n",
    "    voting='hard'  # or 'soft' if using SVC with probabilities\n",
    ")\n",
    "\n",
    "# Train on data\n",
    "voting_clf.fit(X_train, y_train)\n",
    "\n",
    "# Predict\n",
    "y_pred = voting_clf.predict(X_test)\n",
    "\n",
    "# Evaluate\n",
    "print(\"Voting Classifier Performance (LogReg + SVM):\")\n",
    "print(classification_report(y_test, y_pred))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3c29a99e-ffa7-4f27-815d-a64e1c7727ab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Stacked Model Performance (SVM + LogReg):\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      1.00      0.99      1334\n",
      "           1       1.00      0.98      0.99      1052\n",
      "\n",
      "    accuracy                           0.99      2386\n",
      "   macro avg       0.99      0.99      0.99      2386\n",
      "weighted avg       0.99      0.99      0.99      2386\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import StackingClassifier\n",
    "\n",
    "stacked = StackingClassifier(\n",
    "    estimators=[('log_reg', LogisticRegression()), ('svm', LinearSVC())],\n",
    "    final_estimator=LogisticRegression(),\n",
    "    cv=5\n",
    ")\n",
    "\n",
    "stacked.fit(X_train, y_train)\n",
    "y_pred = stacked.predict(X_test)\n",
    "\n",
    "print(\"Stacked Model Performance (SVM + LogReg):\")\n",
    "print(classification_report(y_test, y_pred))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "93c37335-27e6-4208-ab0b-fdc6f0e6f243",
   "metadata": {},
   "source": [
    "# shap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "efb8639e-5fe1-4654-b347-3a9a64e9f42f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Requirement already satisfied: shap in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (0.46.0)\n",
      "Requirement already satisfied: numpy in d:\\anaconda\\ana\\lib\\site-packages (from shap) (1.26.4)\n",
      "Requirement already satisfied: scipy in d:\\anaconda\\ana\\lib\\site-packages (from shap) (1.11.4)\n",
      "Requirement already satisfied: scikit-learn in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from shap) (1.5.2)\n",
      "Requirement already satisfied: pandas in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from shap) (2.2.3)\n",
      "Requirement already satisfied: tqdm>=4.27.0 in d:\\anaconda\\ana\\lib\\site-packages (from shap) (4.65.0)\n",
      "Requirement already satisfied: packaging>20.9 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from shap) (24.0)\n",
      "Requirement already satisfied: slicer==0.0.8 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from shap) (0.0.8)\n",
      "Requirement already satisfied: numba in d:\\anaconda\\ana\\lib\\site-packages (from shap) (0.59.0)\n",
      "Requirement already satisfied: cloudpickle in d:\\anaconda\\ana\\lib\\site-packages (from shap) (2.2.1)\n",
      "Requirement already satisfied: colorama in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from tqdm>=4.27.0->shap) (0.4.6)\n",
      "Requirement already satisfied: llvmlite<0.43,>=0.42.0dev0 in d:\\anaconda\\ana\\lib\\site-packages (from numba->shap) (0.42.0)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from pandas->shap) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in d:\\anaconda\\ana\\lib\\site-packages (from pandas->shap) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in d:\\anaconda\\ana\\lib\\site-packages (from pandas->shap) (2023.3)\n",
      "Requirement already satisfied: joblib>=1.2.0 in d:\\anaconda\\ana\\lib\\site-packages (from scikit-learn->shap) (1.2.0)\n",
      "Requirement already satisfied: threadpoolctl>=3.1.0 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from scikit-learn->shap) (3.5.0)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from python-dateutil>=2.8.2->pandas->shap) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install shap\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "37ea6962-07f2-4ec5-8c7b-32be51055a75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x650 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import shap\n",
    "\n",
    "# Use the logistic regression model (or any base model)\n",
    "log_reg_model = stacked.named_estimators_['log_reg']\n",
    "\n",
    "# Use a TreeExplainer or LinearExplainer (depends on the model)\n",
    "explainer = shap.Explainer(log_reg_model, X_train)\n",
    "\n",
    "# Explain first 100 test instances\n",
    "shap_values = explainer(X_test[:100])\n",
    "\n",
    "# Summary plot\n",
    "shap.plots.bar(shap_values)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "1faff2e6-f487-4d7f-9e67-26f0b029f213",
   "metadata": {},
   "outputs": [],
   "source": [
    "feature_names = vectorizer.get_feature_names_out()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "d9a9b65f-08a3-4f5c-b67a-d74336a1b040",
   "metadata": {},
   "outputs": [],
   "source": [
    "explainer = shap.Explainer(log_reg_model, X_train, feature_names=feature_names)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c302f7b4-8e18-4e72-82e0-6b08684cfaee",
   "metadata": {},
   "source": [
    "# app"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "5a4f3f4f-0fdd-4a21-bc82-391940f65718",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Requirement already satisfied: streamlit in d:\\anaconda\\ana\\lib\\site-packages (1.30.0)\n",
      "Requirement already satisfied: altair<6,>=4.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (5.0.1)\n",
      "Requirement already satisfied: blinker<2,>=1.0.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (1.6.2)\n",
      "Requirement already satisfied: cachetools<6,>=4.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (4.2.2)\n",
      "Requirement already satisfied: click<9,>=7.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (8.1.7)\n",
      "Requirement already satisfied: importlib-metadata<8,>=1.4 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (7.0.1)\n",
      "Requirement already satisfied: numpy<2,>=1.19.3 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (1.26.4)\n",
      "Collecting packaging<24,>=16.8 (from streamlit)\n",
      "  Downloading packaging-23.2-py3-none-any.whl.metadata (3.2 kB)\n",
      "Requirement already satisfied: pandas<3,>=1.3.0 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from streamlit) (2.2.3)\n",
      "Requirement already satisfied: pillow<11,>=7.1.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (10.2.0)\n",
      "Requirement already satisfied: protobuf<5,>=3.20 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (3.20.3)\n",
      "Requirement already satisfied: pyarrow>=6.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (14.0.2)\n",
      "Requirement already satisfied: python-dateutil<3,>=2.7.3 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from streamlit) (2.9.0.post0)\n",
      "Requirement already satisfied: requests<3,>=2.27 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (2.32.3)\n",
      "Requirement already satisfied: rich<14,>=10.14.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (13.3.5)\n",
      "Requirement already satisfied: tenacity<9,>=8.1.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (8.2.2)\n",
      "Requirement already satisfied: toml<2,>=0.10.1 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (0.10.2)\n",
      "Requirement already satisfied: typing-extensions<5,>=4.3.0 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (4.9.0)\n",
      "Requirement already satisfied: tzlocal<6,>=1.1 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (2.1)\n",
      "Requirement already satisfied: validators<1,>=0.2 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (0.18.2)\n",
      "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (3.1.37)\n",
      "Requirement already satisfied: pydeck<1,>=0.8.0b4 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (0.8.0)\n",
      "Requirement already satisfied: tornado<7,>=6.0.3 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from streamlit) (6.4)\n",
      "Requirement already satisfied: watchdog>=2.1.5 in d:\\anaconda\\ana\\lib\\site-packages (from streamlit) (2.1.6)\n",
      "Requirement already satisfied: jinja2 in d:\\anaconda\\ana\\lib\\site-packages (from altair<6,>=4.0->streamlit) (3.1.3)\n",
      "Requirement already satisfied: jsonschema>=3.0 in d:\\anaconda\\ana\\lib\\site-packages (from altair<6,>=4.0->streamlit) (4.19.2)\n",
      "Requirement already satisfied: toolz in d:\\anaconda\\ana\\lib\\site-packages (from altair<6,>=4.0->streamlit) (0.12.0)\n",
      "Requirement already satisfied: colorama in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from click<9,>=7.0->streamlit) (0.4.6)\n",
      "Requirement already satisfied: gitdb<5,>=4.0.1 in d:\\anaconda\\ana\\lib\\site-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.7)\n",
      "Requirement already satisfied: zipp>=0.5 in d:\\anaconda\\ana\\lib\\site-packages (from importlib-metadata<8,>=1.4->streamlit) (3.17.0)\n",
      "Requirement already satisfied: pytz>=2020.1 in d:\\anaconda\\ana\\lib\\site-packages (from pandas<3,>=1.3.0->streamlit) (2023.3.post1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in d:\\anaconda\\ana\\lib\\site-packages (from pandas<3,>=1.3.0->streamlit) (2023.3)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from python-dateutil<3,>=2.7.3->streamlit) (1.16.0)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in d:\\anaconda\\ana\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in d:\\anaconda\\ana\\lib\\site-packages (from requests<3,>=2.27->streamlit) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in d:\\anaconda\\ana\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.0.7)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in d:\\anaconda\\ana\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2024.8.30)\n",
      "Requirement already satisfied: markdown-it-py<3.0.0,>=2.2.0 in d:\\anaconda\\ana\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.2.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in c:\\users\\admin\\appdata\\roaming\\python\\python311\\site-packages (from rich<14,>=10.14.0->streamlit) (2.18.0)\n",
      "Requirement already satisfied: decorator>=3.4.0 in d:\\anaconda\\ana\\lib\\site-packages (from validators<1,>=0.2->streamlit) (5.1.1)\n",
      "Requirement already satisfied: smmap<5,>=3.0.1 in d:\\anaconda\\ana\\lib\\site-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.0)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in d:\\anaconda\\ana\\lib\\site-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.3)\n",
      "Requirement already satisfied: attrs>=22.2.0 in d:\\anaconda\\ana\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (23.1.0)\n",
      "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in d:\\anaconda\\ana\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.7.1)\n",
      "Requirement already satisfied: referencing>=0.28.4 in d:\\anaconda\\ana\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.30.2)\n",
      "Requirement already satisfied: rpds-py>=0.7.1 in d:\\anaconda\\ana\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.10.6)\n",
      "Requirement already satisfied: mdurl~=0.1 in d:\\anaconda\\ana\\lib\\site-packages (from markdown-it-py<3.0.0,>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.0)\n",
      "Downloading packaging-23.2-py3-none-any.whl (53 kB)\n",
      "   ---------------------------------------- 0.0/53.0 kB ? eta -:--:--\n",
      "   ---------------------------------------- 0.0/53.0 kB ? eta -:--:--\n",
      "   ------- -------------------------------- 10.2/53.0 kB ? eta -:--:--\n",
      "   --------------- ------------------------ 20.5/53.0 kB 217.9 kB/s eta 0:00:01\n",
      "   --------------- ------------------------ 20.5/53.0 kB 217.9 kB/s eta 0:00:01\n",
      "   -------------------------------------- - 51.2/53.0 kB 290.5 kB/s eta 0:00:01\n",
      "   ---------------------------------------- 53.0/53.0 kB 248.7 kB/s eta 0:00:00\n",
      "Installing collected packages: packaging\n",
      "  Attempting uninstall: packaging\n",
      "    Found existing installation: packaging 24.0\n",
      "    Uninstalling packaging-24.0:\n",
      "      Successfully uninstalled packaging-24.0\n",
      "Successfully installed packaging-23.2\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
      "spyder 5.4.3 requires jedi<0.19.0,>=0.17.2, but you have jedi 0.19.1 which is incompatible.\n"
     ]
    }
   ],
   "source": [
    "pip install streamlit\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "5441514c-07f7-4585-ab72-3026100986b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['vectorizer.pkl']"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import joblib\n",
    "\n",
    "joblib.dump(stacked, 'stacked_model.pkl')\n",
    "joblib.dump(vectorizer, 'vectorizer.pkl')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "90abe730-86c2-4c6e-862f-99037300214a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import joblib\n",
    "\n",
    "# Load model and vectorizer\n",
    "model = joblib.load('stacked_model.pkl')\n",
    "vectorizer = joblib.load('vectorizer.pkl')\n",
    "\n",
    "st.title(\"📧 Email Fraud Detection App\")\n",
    "\n",
    "email_text = st.text_area(\"Paste your email here:\")\n",
    "\n",
    "if st.button(\"Predict\"):\n",
    "    if email_text.strip() == \"\":\n",
    "        st.warning(\"Please enter some text.\")\n",
    "    else:\n",
    "        # Preprocess input\n",
    "        X_input = vectorizer.transform([email_text])\n",
    "        prediction = model.predict(X_input)[0]\n",
    "        label = \"🔒 Not Fraud\" if prediction == 0 else \"🚨 Fraud Detected\"\n",
    "        st.success(f\"Prediction: {Class}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "d3969e69-268e-4016-a661-9574143ed9c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Admin\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.getcwd())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "e596ae15-cfca-4313-b485-2d67af2b313c",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (507122745.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[49], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    streamlit run app.py\u001b[0m\n\u001b[1;37m              ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "streamlit run app.py\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b6828750-9c6a-4285-9840-eabb858a5d24",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
